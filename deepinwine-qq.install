# This is a default template for a post-install scriptlet.
# Uncomment only required functions and remove any functions
# you don't need (and this header).

## arg 1:  the new package version
pre_install() {
    _orig_preinst install
}

## arg 1:  the new package version
post_install() {
    _orig_postinst configure
}

## arg 1:  the new package version
## arg 2:  the old package version
pre_upgrade() {
    _orig_prerm upgrade
    _orig_preinst upgrade
}

## arg 1:  the new package version
## arg 2:  the old package version
post_upgrade() {
    _orig_postinst configure
}

## arg 1:  the old package version
pre_remove() {
    _orig_prerm remove
}

## arg 1:  the old package version
post_remove() {
    _orig_postrm purge
}

_orig_preinst() {
    # (c) Copyright 2008. CodeWeavers, Inc.

    # Setup logging
    if [ -n "$CX_LOG" ]
    then
        [ "$CX_LOG" = "-" ] || exec 2>>"$CX_LOG"
        echo >&2
        echo "***** `date`" >&2
        echo "Starting: $0 $@" >&2
        set -x
    fi

    action="$1"
    oldver="$2"

    CX_ROOT="/opt/cxoffice"
    CX_BOTTLE="Deepin-QQ"
    export CX_ROOT CX_BOTTLE

    case "$action" in
        install|upgrade)
            if [ ! -f "$CX_ROOT/bin/cxbottle" ]
            then
                echo "error: could not find CrossOver in '$CX_ROOT'" >&2
                exit 1
            fi
            if [ ! -x "$CX_ROOT/bin/cxbottle" ]
            then
                echo "error: the '$CX_ROOT/bin/cxbottle' tool is not executable!" >&2
                exit 1
            fi
            if [ ! -x "$CX_ROOT/bin/wineprefixcreate" -o ! -f "$CX_ROOT/bin/wineprefixcreate" ]
            then
                echo "error: managed bottles are not supported in this version of CrossOver" >&2
                exit 1
            fi

            if [ -d "$CX_ROOT/support/$CX_BOTTLE" ]
            then
                # Save the bottle's uuid
                "$CX_ROOT/bin/cxbottle" --get-uuid >"$CX_ROOT/support/$CX_BOTTLE/.uuid" 2>/dev/null
            fi
            ;;

        abort-upgrade)
            rm -f "$CX_ROOT/support/$CX_BOTTLE/.uuid"
            ;;
    esac

    # Make sure the script returns 0
    true
}

_orig_postinst() {
    # (c) Copyright 2008. CodeWeavers, Inc.

    # Setup logging
    if [ -n "$CX_LOG" ]
    then
        [ "$CX_LOG" = "-" ] || exec 2>>"$CX_LOG"
        echo >&2
        echo "***** `date`" >&2
        echo "Starting: $0 $@" >&2
        set -x
    fi

    action="$1"
    oldver="$2"

    CX_ROOT="/opt/cxoffice"
    CX_BOTTLE="Deepin-QQ"
    export CX_ROOT CX_BOTTLE

    if [ "$action" = "configure" ]
    then
        uuid=""
        uuid_file="$CX_ROOT/support/$CX_BOTTLE/.uuid"
        if [ -f "$uuid_file" ]
        then
            uuid=`cat "$uuid_file"`
            rm -f "$uuid_file"
        fi

        set_uuid=""
        if [ -n "$uuid" ]
        then
            set_uuid="--set-uuid $uuid"
        fi

        "$CX_ROOT/bin/cxbottle" $set_uuid --restored --removeall --install
    fi

    # Make sure the script returns 0
    true
}

_orig_prerm() {
    # (c) Copyright 2008. CodeWeavers, Inc.

    # Setup logging
    if [ -n "$CX_LOG" ]
    then
        [ "$CX_LOG" = "-" ] || exec 2>>"$CX_LOG"
        echo >&2
        echo "***** `date`" >&2
        echo "Starting: $0 $@" >&2
        set -x
    fi

    action="$1"
    if [ "$2" = "in-favour" ]
    then
        # Treating this as an upgrade is less work and safer
        action="upgrade"
    fi

    CX_ROOT="/opt/cxoffice"
    CX_BOTTLE="Deepin-QQ"
    export CX_ROOT CX_BOTTLE

    if [ "$action" = "remove" ]
    then
        # Uninstall the bottle before cxbottle.conf gets deleted
        "$CX_ROOT/bin/cxbottle" --removeall
    fi

    # Make sure the script returns 0
    true
}

_orig_postrm() {
    # (c) Copyright 2008. CodeWeavers, Inc.

    # Setup logging
    if [ -n "$CX_LOG" ]
    then
        [ "$CX_LOG" = "-" ] || exec 2>>"$CX_LOG"
        echo >&2
        echo "***** `date`" >&2
        echo "Starting: $0 $@" >&2
        set -x
    fi

    action="$1"

    CX_ROOT="/opt/cxoffice"
    CX_BOTTLE="Deepin-QQ"
    export CX_ROOT CX_BOTTLE

    if [ "$action" = "purge" ]
    then
        # Delete any leftover file
        rm -rf "$CX_ROOT/support/$CX_BOTTLE"
    fi

    # Make sure the script returns 0
    true
}
